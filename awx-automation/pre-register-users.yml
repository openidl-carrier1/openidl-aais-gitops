- hosts: ansible_provisioners
  gather_facts: yes
  no_log: "{{ no_ansible_log | default(false) }}"
  vars_files:
    - "./config/{{ org_name }}-config-{{ env }}.yml"

  tasks:
    - include_role:
        name: "prerun-job"
      vars:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        aws_region: "{{ aws_region }}"
        aws_external_id: "{{ aws_external_id }}"
        aws_iam_role: "{{ aws_iam_role }}"

    - name: Update kubeconfig and set context to openidl EKS cluster
      shell: |
        export AWS_PROFILE=cicd-role; aws eks update-kubeconfig --region {{ aws_region }} --name {{ blk_cluster_name }}
    - name: Get vault root token
      shell: |
        export AWS_PROFILE=cicd-role
        aws secretsmanager get-secret-value --secret-id {{ network.org_name }}-{{ env }}-vault-unseal-key --version-stage AWSCURRENT --region {{ aws_region }} | jq -r .SecretString
      register: vault

    - name: Get kvs user credentials from secrets manager
      shell: |
        export AWS_PROFILE=cicd-role
        aws secretsmanager get-secret-value --secret-id {{ network.org_name }}-{{ env }}-kvs-vault  --version-stage AWSCURRENT --region {{ aws_region }} | jq -r '.SecretString|fromjson'.username
      register: vault_user

    - name: Get kvs user credentials from secrets manager
      shell: |
        export AWS_PROFILE=cicd-role
        aws secretsmanager get-secret-value --secret-id {{ network.org_name }}-{{ env }}-kvs-vault  --version-stage AWSCURRENT --region {{ aws_region }} | jq -r '.SecretString|fromjson'.password
      register: vault_user_token

    - name: Check register-users action performed in the past
      shell : |
        export AWS_PROFILE=cicd-role
        aws secretsmanager list-secrets --region {{ aws_region }} --filter Key="name",Values="{{ network.org_name }}-{{ env }}-ca-app-user-token" | jq .SecretList[0].Name
      register: ca_token_status

    - name: Get CA credentials from secrets manager
      shell: |
        export AWS_PROFILE=cicd-role
        aws secretsmanager get-secret-value --secret-id {{ network.org_name }}-{{ env }}-ca-app-user-token  --version-stage AWSCURRENT --region {{ aws_region }} | jq -r .SecretString
      register: ca_user_password_aws_sm
      when: ca_token_status.stdout != "null"

    - name: Setting ca-user-password to enroll-user only
      set_fact:
        ca_user_password: "{{ ca_user_password_aws_sm.stdout }}"
      when: ca_token_status.stdout != "null"

    - name: Setting ca-user-password to register and enroll-user
      set_fact:
        ca_user_password: "{{ lookup('password', '/dev/null chars=ascii_uppercase,ascii_lowercase,digits length=40') }}"
      when: ca_token_status.stdout == "null"

    - include_role:
        name: "baf/pre-register-users"
      vars:
        vault_token: "{{ vault.stdout }}"
        vault_kvs_user: "{{ vault_user.stdout }}"
        vault_kvs_user_token: "{{ vault_user_token.stdout }}"
        ca_user_token: "{{ ca_user_password }}"
        aws_region: "{{ aws_region }}"
        ca_user_token_status: "{{ ca_token_status.stdout }}"