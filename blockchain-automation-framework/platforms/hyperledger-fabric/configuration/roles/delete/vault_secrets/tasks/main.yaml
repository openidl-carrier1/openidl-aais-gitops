#############################################################################################
# This role deletes the Vault configurations
#############################################################################################

#############################################################################################
# This task deletes the Docker credentials
- name: Delete docker creds
  k8s:
    kind: Secret
    namespace: "{{ component_name }}"
    name: "regcred"
    state: absent
    kubeconfig: "{{ kubernetes.config_file }}"
    context: "{{ kubernetes.context }}"
  ignore_errors: yes

# Delete the Ambassador Creds for CA
- name: Delete Ambassador creds
  k8s:
    kind: Secret
    namespace: default
    name: ca-{{ component_name }}-ambassador-certs
    kubeconfig: "{{ kubernetes.config_file }}"
    context: "{{ kubernetes.context }}"
    state: absent
  ignore_errors: yes

- name: Delete Ambassador creds
  k8s:
    kind: Secret
    namespace: default
    name: orderer-{{ component_name }}-ambassador-certs
    kubeconfig: "{{ kubernetes.config_file }}"
    context: "{{ kubernetes.context }}"
    state: absent
  ignore_errors: yes

- name: Delete Ambassador creds
  k8s:
    kind: Secret
    namespace: "{{ component_name }}"
    name: orderer-{{ component_name }}-ambassador-certs
    kubeconfig: "{{ kubernetes.config_file }}"
    context: "{{ kubernetes.context }}"
    state: absent
  when: network.env.proxy == 'haproxy'
  ignore_errors: yes
  
- name: Delete Ambassador creds
  k8s:
    kind: Secret
    namespace: default
    name: peer0-{{ component_name }}-ambassador-certs
    kubeconfig: "{{ kubernetes.config_file }}"
    context: "{{ kubernetes.context }}"
    state: absent
  ignore_errors: yes

- name: Delete Ambassador creds
  k8s:
    kind: Secret
    namespace: "{{ component_name }}"
    name: peer0-{{ component_name }}-ambassador-certs
    kubeconfig: "{{ kubernetes.config_file }}"
    context: "{{ kubernetes.context }}"
    state: absent
  when: network.env.proxy == 'haproxy'
  ignore_errors: yes

############################################################################################
# This task deletes vault auth
- name: Delete vault-auth path
  shell: |
    vault delete sys/auth/{{ network.env.type }}{{ component_name }}-auth
  environment:
    VAULT_ADDR: "{{ item.vault.url }}"
    VAULT_TOKEN: "{{ item.vault.root_token }}"

############################################################################################
# This task deletes crypto materials from vault
- name: Delete Crypto for orderers
  shell: |
    vault delete {{ item.vault.secret_path | default('secret') }}/crypto/ordererOrganizations/{{ component_name }}/ca
    vault delete {{ item.vault.secret_path | default('secret') }}/crypto/ordererOrganizations/{{ component_name }}/orderers/{{orderer.name}}.{{ component_name }}/tls
    vault delete {{ item.vault.secret_path | default('secret') }}/crypto/ordererOrganizations/{{ component_name }}/orderers/{{orderer.name}}.{{ component_name }}/msp
    vault delete {{ item.vault.secret_path | default('secret') }}/crypto/ordererOrganizations/{{ component_name }}/users/admin/tls
    vault delete {{ item.vault.secret_path | default('secret') }}/crypto/ordererOrganizations/{{ component_name }}/users/admin/msp
    vault delete {{ item.vault.secret_path | default('secret') }}/crypto/ordererOrganizations/{{ component_name }}/ambassador/{{orderer.name}}
    vault delete {{ item.vault.secret_path | default('secret') }}/credentials/{{ component_name }}/ca/{{ org_name }}
  loop: "{{ services.orderers }}"
  loop_control:
    loop_var: orderer
  environment:
    VAULT_ADDR: "{{ item.vault.url }}"
    VAULT_TOKEN: "{{ item.vault.root_token }}"
  when: component_type == 'orderer'

############################################################################################
# This task deletes crypto materials from vault
- name: Delete Crypto for peers
  shell: |
    vault delete {{ item.vault.secret_path | default('secret') }}/crypto/peerOrganizations/{{ component_name }}/ca
    vault delete {{ item.vault.secret_path | default('secret') }}/crypto/peerOrganizations/{{ component_name }}/users/admin/tls
    vault delete {{ item.vault.secret_path | default('secret') }}/crypto/peerOrganizations/{{ component_name }}/users/admin/msp
    vault delete {{ item.vault.secret_path | default('secret') }}/crypto/peerOrganizations/{{ component_name }}/users/user1/tls
    vault delete {{ item.vault.secret_path | default('secret') }}/crypto/peerOrganizations/{{ component_name }}/users/user1/msp
    vault delete {{ item.vault.secret_path | default('secret') }}/crypto/peerOrganizations/{{ component_name }}/orderer/tls
    vault delete {{ item.vault.secret_path | default('secret') }}/crypto/peerOrganizations/{{ component_name }}/ambassador
    {% for peer in peers %}
    vault delete {{ item.vault.secret_path | default('secret') }}/crypto/peerOrganizations/{{ component_name }}/peers/{{peer.name}}.{{ component_name }}/tls
    vault delete {{ item.vault.secret_path | default('secret') }}/crypto/peerOrganizations/{{ component_name }}/peers/{{peer.name}}.{{ component_name }}/msp
    {% endfor %}
    vault delete {{ item.vault.secret_path | default('secret') }}/credentials/{{ component_name }}/ca/{{ org_name }}
    vault delete {{ item.vault.secret_path | default('secret') }}/credentials/{{ component_name }}/couchdb/{{ org_name }}
    vault delete {{ item.vault.secret_path | default('secret') }}/credentials/{{ component_name }}/git
  vars:
    peers: "{{ services.peers }}"
  environment:
    VAULT_ADDR: "{{ item.vault.url }}"
    VAULT_TOKEN: "{{ item.vault.root_token }}"
  when: component_type == 'peer'

- name: Remove all endorsers
  args:
    executable: /bin/bash
  shell: |    
    for path in $(vault list {{ item.vault.secret_path | default('secret') }}/crypto/peerOrganizations/{{ component_name }}/endorsers);
    do
      vault delete {{ item.vault.secret_path | default('secret') }}/crypto/peerOrganizations/{{ component_name }}/endorsers/${path}/users/admin/msp;
    done
  environment:
    VAULT_ADDR: "{{ item.vault.url }}"
    VAULT_TOKEN: "{{ item.vault.root_token }}"
  ignore_errors: yes

- name: Delete policy
  shell: |
    vault policy delete vault-crypto-{{ component_type }}-{{ component_name }}-ro
  environment:
    VAULT_ADDR: "{{ item.vault.url }}"
    VAULT_TOKEN: "{{ item.vault.root_token }}"
  ignore_errors: yes
