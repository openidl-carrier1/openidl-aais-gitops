# Check if CA-tools pod is running
- name: "Waiting for CA-tool in {{ item.name | lower }}-net"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/helm_component"
  vars:
    component_type: "Pod"
    namespace: "{{ item.name | lower }}-net"
    component_name: "ca-tools"
    label_selectors:
      - name = {{ component_name }}
  tags:
    - notest

# Ensure ca directory is present in build
- include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/setup"
  vars:
    path: "./build/crypto-config/ordererOrganizations/{{ component_name }}/ca"
    check: "ensure_dir"

# Check if CA certs exists in vault, if not this should fail. If yes, get the certificate
- name: Check if ca certs already created
  shell: |
    vault kv get -field=ca.{{ component_name }}-cert.pem {{ vault.secret_path | default('secret') }}/crypto/ordererOrganizations/{{ component_name }}/ca > ca.{{ component_name }}-cert.pem
    mv ca.{{ component_name }}-cert.pem ./build/crypto-config/ordererOrganizations/{{ component_name }}/ca/
  environment:
    VAULT_ADDR: "{{ vault.url }}"
    VAULT_TOKEN: "{{ vault.root_token }}"
  changed_when: false

# Check if CA key exists in vault, if not this should fail. If yes, get the certificate
- name: Check if ca key already created
  shell: |
    vault kv get -field={{ component_name }}-CA.key {{ vault.secret_path | default('secret') }}/crypto/ordererOrganizations/{{ component_name }}/ca > {{ component_name }}-CA.key
    mv {{ component_name }}-CA.key ./build/crypto-config/ordererOrganizations/{{ component_name }}/ca/
  environment:
    VAULT_ADDR: "{{ vault.url }}"
    VAULT_TOKEN: "{{ vault.root_token }}"
  changed_when: false
