---
- name: Verify
  hosts: localhost
  tasks:

#####################################################################################
  #This task checks if the ca.key is created for orderers or not
  - name: Check if the ca.key is created for orderers or not
    stat:
      path: "./build/crypto-config/ordererOrganizations/testorderer/ca/testorderer-CA.key"
    register: ca_key_orderer_check
  
#####################################################################################
  #This task assert if the ca.key exists for orderers
  - name: Assert if the ca.key exists for orderers
    assert:
      that: ca_key_orderer_check.stat.exists

#####################################################################################
  #This task checks if the ca.pem is created for orderers or not
  - name: Check if the ca.pem is created for orderers or not
    stat:
      path: "./build/crypto-config/ordererOrganizations/testorderer/ca/ca.testorderer-cert.pem"
    register: ca_pem_orderer_check
  
#####################################################################################
  #This task assert if the ca.pem exists for orderers
  - name: Assert if the ca.pem exists for orderers
    assert:
      that: ca_pem_orderer_check.stat.exists

#####################################################################################
  #This task checks if the crypto material are written to Vault for orderer
  - name: Check if the crypto material are written to Vault for orderer
    shell: |
      vault kv get -field=ca.testorderer-cert.pem secret/crypto/ordererOrganizations/testorderer/ca
      vault kv get -field=testorderer-CA.key secret/crypto/ordererOrganizations/testorderer/ca
    environment:
      VAULT_ADDR: "http://localhost:9090"
      VAULT_TOKEN: "root"
    register: vault_orderer_CA_cert_key
    delegate_to: localhost
  
#####################################################################################
  #This task assert if the orderer tls certs is created or not
  - name: Assert if the orderer tls cert are present in the Vault
    assert:
      that: vault_orderer_CA_cert_key.failed == False

#####################################################################################
  #This task checks if the ca server admin credentials is created or not
  - name: Check if the ca server admin credentials are written to Vault for orderer
    shell: |
      vault kv get secret/credentials/testorderer/ca/testorderer
    environment:
      VAULT_ADDR: "http://localhost:9090"
      VAULT_TOKEN: "root"
    register: vault_caadmin_result
    delegate_to: localhost
  
#####################################################################################
  #This task assert if the ca server admin credentials is created or not
  - name: Assert if the ca server admin credentials are written to Vault for orderer
    assert:
      that: vault_caadmin_result.failed == False

#####################################################################################
  #This task checks if the value file is created for CA of the orderers
  - name: Check if the value file is created for CA of the orderers
    stat:
      path: "test/test_ca/testorderer.yaml"
    register: orderer_ca_check
  
#####################################################################################
  #This task assert if the value file is created for CA of the orderers
  - name: Assert if the value file is created for CA of the orderers
    assert:
      that: orderer_ca_check.stat.exists

# 
# ################# peers ##########################################
#####################################################################################
  #This task checks if the ca.key is created for peers or not
  - name: Check if the ca.key is created for peers or not
    stat:
      path: "./build/crypto-config/peerOrganizations/testpeer/ca/testpeer-CA.key"
    register: ca_key_peer_check
  
#####################################################################################
  #This task assert if the ca.key exists for peers
  - name: Assert if the ca.key exists for peers
    assert:
      that: ca_key_peer_check.stat.exists

#####################################################################################
  #This task checks if the ca.pem is created for peers or not
  - name: Check if the ca.pem is created for peers or not
    stat:
      path: "./build/crypto-config/peerOrganizations/testpeer/ca/ca.testpeer-cert.pem"
    register: ca_pem_peer_check
  
#####################################################################################
  #This task assert if the ca.pem exists for peers
  - name: Assert if the ca.pem exists for peers
    assert:
      that: ca_pem_peer_check.stat.exists

#####################################################################################
  #This task checks if the crypto material are written to Vault for peers
  - name: Check if the crypto material are written to Vault for peers
    shell: |
      vault kv get -field=ca.testpeer-cert.pem secret/crypto/peerOrganizations/testpeer/ca
      vault kv get -field=testpeer-CA.key secret/crypto/peerOrganizations/testpeer/ca
    environment:
      VAULT_ADDR: "http://localhost:9090"
      VAULT_TOKEN: "root"
    register: vault_peer_CA_cert_key
    delegate_to: localhost
  
#####################################################################################
  #This task assert if the orderer tls certs is created or not
  - name: Assert if the orderer tls cert are present in the Vault
    assert:
      that: vault_peer_CA_cert_key.failed == False

#####################################################################################
  #This task checks if the ca server admin credentials is created or not
  - name: Check if the ca server admin credentials are written to Vault for peers
    shell: |
      vault kv get secret/credentials/testpeer/ca/testpeer
    environment:
      VAULT_ADDR: "http://localhost:9090"
      VAULT_TOKEN: "root"
    register: vault_caadmin_result
    delegate_to: localhost
  
#####################################################################################
  #This task assert if the ca server admin credentials is created or not
  - name: Assert if the ca server admin credentials are written to Vault for peers
    assert:
      that: vault_caadmin_result.failed == False

#####################################################################################
  #This task checks if the value file is created for CA of the peers
  - name: Check if the value file is created for CA of the peers
    stat:
      path: "test/test_ca/testpeer.yaml"
    register: peer_ca_check
  
#####################################################################################
  #This task assert if the value file is created for CA of the peers
  - name: Assert if the value file is created for CA of the peers
    assert:
      that: peer_ca_check.stat.exists

######## CRYPTO SCRIPT ##############################
#####################################################################################
#####################################################################################
  #This task checks if the crypto_script is created for the orderers
  - name: Check if the crypto_script is created for orderers
    stat:
      path: "./build/generate-crypto-testorderer-testorderer1.sh"
    register: gc_orderer_check
  
#####################################################################################
  #This task assert if the value file exists or not for orderers
  - name: Assert if the value file exists or not for orderers
    assert:
      that: gc_orderer_check.stat.exists

#####################################################################################
  #This task checks if the crypto_script is created for the peers
  - name: Check if the crypto_script is created for peers
    stat:
      path: "./build/generate-crypto-testpeer.sh"
    register: gc_peer_check

#####################################################################################
  #This task assert if the value file exists or not for peers
  - name: Assert if the value file exists or not for peers
    assert:
      that: gc_peer_check.stat.exists  

#####################################################################################
  #This task checks if configtx file is created or not
  - name: Check if the configtx file is created or not
    stat:
      path: "./build/configtx.yaml"
    register: configtx_check
  
#####################################################################################
  #This task assert if  configtx file is created or not
  - name: Assert if the configtx file is created or not
    assert:
      that: configtx_check.stat.exists

#####################################################################################
  #This task checks if channels are created or not
  - name: Check if the channels are created or not
    stat:
      path: "./build/channel-artifacts/test_channel.tx.base64"
    register: channel_check
  
#####################################################################################
  #This task assert if the channels are created or not
  - name: Assert if the channels are created or not
    assert:
      that: channel_check.stat.exists

#####################################################################################
  #This task checks if configtx file is created or not
  - name: Check if the Anchor artifacts is created or not for participant 1
    stat:
      path: "./build/channel-artifacts/test_channeltestorg1MSPAnchor.tx.base64"
    register: anchor_check
  
#####################################################################################
  #This task assert if  configtx file is created or not
  - name: Assert if the Anchor artifacts is created or not
    assert:
      that: anchor_check.stat.exists
#####################################################################################
  #This task checks if configtx file is created or not
  - name: Check if the Anchor artifacts is created or not for participant 2
    stat:
      path: "./build/channel-artifacts/test_channeltestorg2MSPAnchor.tx.base64"
    register: anchor_check2

#####################################################################################
  #This task assert if  configtx file is created or not
  - name: Assert if the Anchor artifacts is created or not
    assert:
      that: anchor_check2.stat.exists
