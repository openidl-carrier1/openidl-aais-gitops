---
- name: Checking if the namespace flux-{{ network.env.type }} already exists
  k8s_info:
    kind: "Namespace"
    name: "flux-{{ network.env.type }}"
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kubecontext }}"
  register: result

# This task creates the value file of Namespace for flux
- name: Create namespaces  flux-{{ network.env.type }}
  shell: |
    KUBECONFIG={{ kubeconfig_path }} kubectl create namespace flux-{{ network.env.type }} 
  when: result.resources|length == 0
  
- name: Check if Flux is running
  k8s_info:
    kind: Pod
    namespace: flux-{{ network.env.type }}
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kubecontext }}"
    label_selectors:
      - app = flux
      - release = flux-{{ network.env.type }}
    field_selectors:
      - status.phase=Running
  register: flux_service
  tags:
    - flux
- name: Get ssh known hosts
  shell: |
    ssh-keyscan {{ git_host }} > flux_known_hosts
    chmod -R 777 flux_known_hosts
  when: flux_service.resources|length == 0 and git_protocol == "ssh"
  tags:
    - molecule-idempotence-notest

- name: Helm repo add
  shell: |
    helm repo add fluxcd https://charts.fluxcd.io
  when: flux_service.resources|length == 0
  tags:
    - flux
    - molecule-idempotence-notest

- name: Install flux for over https connection
  shell: |
    KUBECONFIG={{ kubeconfig_path }} kubectl create secret generic git-auth-{{ network.env.type }} --from-literal=GIT_AUTHUSER={{ git_username }}  --from-literal=GIT_AUTHKEY={{ git_password }} --namespace flux-{{ network.env.type }}
    KUBECONFIG={{ kubeconfig_path }} kubectl apply -f https://raw.githubusercontent.com/fluxcd/helm-operator/{{ helm_operator_version }}/deploy/crds.yaml --context="{{ kubecontext }}"
    KUBECONFIG={{ kubeconfig_path }} helm upgrade --install flux-{{ network.env.type }} {{ playbook_dir }}/../../../platforms/shared/charts/flux --namespace flux-{{ network.env.type }} --set git.secretName=git-auth-{{ network.env.type }} --set rbac.create=true --set rbac.pspEnabled=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='https://{{ git_username }}:{{ git_password }}@{{ git_repo }}' --set git.branch={{ git_branch }} --set git.label='sync-{{ network.env.type }}' --set git.path="{{ git_path }}"  --set registry.insecureHosts="{{ network.docker.url }}" --kube-context="{{ kubecontext }}"
    KUBECONFIG={{ kubeconfig_path }} helm upgrade --install flux-{{ network.env.type }}-helm-operator fluxcd/helm-operator --namespace flux-{{ network.env.type }} --set rbac.create=true --set rbac.pspEnabled=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='https://{{ git_username }}:{{ git_password }}@{{ git_repo }}' --set git.ssh.secretName=git-auth-{{ network.env.type }} --set helm.versions=v3 --kube-context="{{ kubecontext }}"
  when: flux_service.resources|length == 0 and git_protocol == "https" 
  tags:
    - flux
    - molecule-idempotence-notest

- name: Install flux for over ssh connection
  shell: |
    KUBECONFIG={{ kubeconfig_path }} kubectl create secret generic git-auth-{{ network.env.type }} --from-file=identity={{ git_key }} --namespace flux-{{ network.env.type }}
    KUBECONFIG={{ kubeconfig_path }} kubectl apply -f https://raw.githubusercontent.com/fluxcd/helm-operator/{{ helm_operator_version }}/deploy/crds.yaml --context="{{ kubecontext }}"
    KUBECONFIG={{ kubeconfig_path }} helm upgrade --install flux-{{ network.env.type }} {{ playbook_dir }}/../../../platforms/shared/charts/flux --namespace flux-{{ network.env.type }} --set git.secretName=git-auth-{{ network.env.type }} --set rbac.create=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='{{ git_url }}' --set git.branch={{ git_branch }} --set git.label='sync-{{ network.env.type }}' --set git.path="{{ git_path }}" --set-file ssh.known_hosts=flux_known_hosts --set registry.insecureHosts="{{ network.docker.url }}" --kube-context="{{ kubecontext }}"
    KUBECONFIG={{ kubeconfig_path }} helm upgrade --install flux-{{ network.env.type }}-helm-operator fluxcd/helm-operator --namespace flux-{{ network.env.type }} --set rbac.create=true --set git.timeout=200s --set git.pollInterval=2m --set git.url='{{ git_url }}' --set git.ssh.secretName=git-auth-{{ network.env.type }} --set-file git.ssh.known_hosts=flux_known_hosts --set helm.versions=v3 --kube-context="{{ kubecontext }}"
  when: flux_service.resources|length == 0 and git_protocol == "ssh" 
  tags:
    - flux
    - molecule-idempotence-notest

# Wait for flux pod to start running
- name: wait for pods to come up
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/helm_component"
  vars:
    namespace: flux-{{ network.env.type }}
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kubecontext }}"
    component_name: flux
    component_type: "Pod"
    label_selectors:
      - app = flux
      - release = flux-{{ network.env.type }}
  when: flux_service.resources|length == 0
