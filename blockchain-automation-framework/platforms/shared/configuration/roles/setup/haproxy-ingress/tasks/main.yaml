---
# Check if haproxy is already installed
- name: "Check if haproxy is already installed"
  k8s_info:
    kind: Pod
    namespace: "ingress-controller"
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kubecontext }}"
    label_selectors:
      - run = haproxy-ingress
    field_selectors:
      - status.phase=Running
  register: haproxy_status

# Install HAProxy ingress via helmchart
- name: Install HAProxy Ingress controller
  shell: |
    KUBECONFIG={{ kubeconfig_path }} helm upgrade --install --namespace default --set metadata.namespace="ingress-controller" --set service.ports.https=8443 --set image.version="v0.9.1" haproxy {{ playbook_dir }}/../../../platforms/shared/charts/haproxy
  when: haproxy_status.resources|length == 0
  tags:
    - haproxy
    - molecule-idempotence-notest

# Update external_dns with correct annotations
- name: Enable external DNS
  shell: |
    KUBECONFIG={{ kubeconfig_path }} kubectl annotate service haproxy-ingress -n ingress-controller --overwrite "external-dns.alpha.kubernetes.io/hostname=*.{{ item.external_url_suffix }}."
  tags:
    - haproxy
    - molecule-idempotence-notest
  when: network.env.external_dns is defined and network.env.external_dns == 'enabled'

# Wait for HAProxy pods to start running
- name: wait for pods to come up
  include_role:
    name: "check/helm_component"
  vars:
    namespace: ingress-controller
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kubecontext }}"
    component_name: flux
    component_type: "Pod"
    label_selectors:
      - run = haproxy-ingress
