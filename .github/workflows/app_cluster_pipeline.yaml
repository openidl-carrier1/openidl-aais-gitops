# This is a manual workflow, hence it must be placed in the default branch of a repository to enable and use
#Author: Surya Lanka
#version: 1.0

name: Deploy MongoDB on application cluster
on:
  workflow_dispatch:
    inputs:
      org_name:
        description: "ORGANIZATION NAME"
        required: true
        default: ""
      environment:
        description: "ENVIRONMENT"
        required: true
        default: ""
      action:
        description: "ACTION"
        required: true
        default: "mongodb"

env:
  cluster_name: ${{ secrets.app_cluster_name }}
  region: ${{ secrets.aws_region }}
  account: ${{ secrets.aws_account_number }}

defaults:
  run:
    shell: bash
    working-directory: ansible-automation

jobs:
  app-cluster-pipeline:
    environment: ${{ github.event.inputs.org_name }}_${{ github.event.inputs.environment }}
    name: app-cluster-pipeline
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    defaults:
      run:
        shell: bash
        working-directory: ansible-automation
    env:
      cluster_name: ${{ secrets.app_cluster_name }}
      region: ${{ secrets.aws_region }}
      account: ${{ secrets.aws_account_number }}

    steps:
      - name: Checkout code
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.gitactions_user_access_key  }}
          aws-secret-access-key: ${{ secrets.gitactions_user_secret_key }}
          aws-region: ${{ secrets.aws_region }}
          role-to-assume: ${{ secrets.gitactions_eksadm_role }}
          role-external-id: ${{ secrets.gitactions_external_id }}
          role-duration-seconds: 3600 # session valid for 60 minutes
          role-session-name: github-actions
          role-skip-session-tagging: true

      - name: Install Ansible and dependencies
        run: |
          pip3 install openshift
          sudo apt-get install -y python3-requests-oauthlib python-yaml jq
          python -m pip install --user ansible==2.9.11

      - name: Install ansible galaxy collection for docker and k8s
        run: |
          ansible-galaxy collection install community.docker
          ansible-galaxy collection install community.kubernetes:==1.2.1

      - name: Setup kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - name: Update kubeconfig and set context to blockchain cluster
        run: |
          aws eks update-kubeconfig --region ${{ env.region }} --name ${{ env.cluster_name }}

      - name: Install Docker
        run: |
          pip3 install docker

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.6.3

      - name: Deploy Mongodb Cluster
        if: github.event.inputs.action == 'mongodb'
        run: |
          ansible-playbook mongodb-setup.yml -i ./inventory/ansible_provisioners \
            -e "@./${{ github.event.inputs.org_name }}-config-${{ github.event.inputs.environment }}.yml"
  
      - name: Cleanup Mongodb cluster
        if: github.event.inputs.action == 'mongodb_cleanup'
        run: |
          ansible-playbook mongodb-cleanup.yml -i ./inventory/ansible_provisioners \
            -e "@./${{ github.event.inputs.org_name }}-config-${{ github.event.inputs.environment }}.yml"
